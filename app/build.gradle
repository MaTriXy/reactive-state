apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "hu.nemi.costate"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.22.3'
    implementation 'android.arch.persistence.room:runtime:1.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.1.0'
    kapt "android.arch.persistence.room:compiler:1.0.0"
    implementation 'android.arch.persistence.room:rxjava2:1.0.0'
    implementation 'android.arch.lifecycle:viewmodel:1.1.0'
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    implementation 'com.google.dagger:dagger:2.14.1'
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-rx2:0.22.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:recyclerview-v7:27.1.0'

    implementation project(':store')
    implementation project(':store-coroutines')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
